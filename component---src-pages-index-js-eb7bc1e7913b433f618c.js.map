{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_bio__WEBPACK_IMPORTED_MODULE_2__","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","_utils_typography__WEBPACK_IMPORTED_MODULE_5__","BlogIndex","_ref","data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","a","createElement","keywords","map","_ref2","node","frontmatter","fields","slug","key","style","marginBottom","rhythm","boxShadow","to","date","dangerouslySetInnerHTML","__html","excerpt"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAAAY,EAAAZ,EAAA,KA0Cea,UAjCG,SAAAC,GAAwB,IAArBC,EAAqBD,EAArBC,KAAMC,EAAeF,EAAfE,SACnBC,EAAYF,EAAKG,KAAKC,aAAaC,MACnCC,EAAQN,EAAKO,kBAAkBC,MAErC,OACEjB,EAAAkB,EAAAC,cAACf,EAAA,EAAD,CAAQM,SAAUA,EAAUI,MAAOH,GACjCX,EAAAkB,EAAAC,cAACd,EAAA,EAAD,CACES,MAAM,YACNM,SAAU,yCAEZpB,EAAAkB,EAAAC,cAAChB,EAAA,EAAD,MACCY,EAAMM,IAAI,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACNT,EAAQS,EAAKC,YAAYV,OAASS,EAAKE,OAAOC,KACpD,OACE1B,EAAAkB,EAAAC,cAAA,OAAKQ,IAAKJ,EAAKE,OAAOC,MACpB1B,EAAAkB,EAAAC,cAAA,MACES,MAAO,CACLC,aAAcC,YAAO,OAGvB9B,EAAAkB,EAAAC,cAACjB,EAAA,KAAD,CAAM0B,MAAO,CAAEG,UAAS,QAAYC,GAAIT,EAAKE,OAAOC,MACjDZ,IAGLd,EAAAkB,EAAAC,cAAA,aAAQI,EAAKC,YAAYS,MACzBjC,EAAAkB,EAAAC,cAAA,KAAGe,wBAAyB,CAAEC,OAAQZ,EAAKa,gBAUhD,IAAMtC,EAAS","file":"component---src-pages-index-js-eb7bc1e7913b433f618c.js","sourcesContent":["/* eslint-disable react/no-danger */\nimport React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport Bio from '../components/bio';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport { rhythm } from '../utils/typography';\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title;\n  const posts = data.allMarkdownRemark.edges;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title=\"All posts\"\n        keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n      />\n      <Bio />\n      {posts.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug;\n        return (\n          <div key={node.fields.slug}>\n            <h3\n              style={{\n                marginBottom: rhythm(1 / 4),\n              }}\n            >\n              <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                {title}\n              </Link>\n            </h3>\n            <small>{node.frontmatter.date}</small>\n            <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n          </div>\n        );\n      })}\n    </Layout>\n  );\n};\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}