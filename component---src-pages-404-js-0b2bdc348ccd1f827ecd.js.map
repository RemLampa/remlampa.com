{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","_ref","data","location","siteTitle","site","siteMetadata","title","a","createElement","StaticQuery","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","query","render","finalData","Fragment","props","children","Consumer","rhythm","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_stern_grove__WEBPACK_IMPORTED_MODULE_1__","typography_theme_stern_grove__WEBPACK_IMPORTED_MODULE_1___default","SternGrove","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","googleFonts","typography","Typography","m","module","exports","require","default","ProdPageRenderer","pageResources","InternalPageRenderer","Object","assign","json","Contents","styled","main","withConfig","displayName","componentId","Footer","footer","Layout","header","subTitle","pathname","react__WEBPACK_IMPORTED_MODULE_1___default","style","marginTop","marginBottom","gatsby__WEBPACK_IMPORTED_MODULE_2__","textDecoration","color","to","fontFamily","marginLeft","marginRight","maxWidth","padding","Date","getFullYear","href","detailsQuery","SEO","description","lang","meta","keywords","gatsby__WEBPACK_IMPORTED_MODULE_3__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","siteUrl","image","src","height","width","alt","facebook","appId","author","concat","length","join","_public_static_d_966423438_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps"],"mappings":"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","file":"component---src-pages-404-js-0b2bdc348ccd1f827ecd.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`;\n\nconst NotFoundPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"404: Not Found\" />\n      <h1>Not Found</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </Layout>\n  );\n};\n\nexport default NotFoundPage;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import Typography from 'typography';\nimport SternGrove from 'typography-theme-stern-grove';\n\nSternGrove.overrideThemeStyles = () => {\n  return {\n    'a.gatsby-resp-image-link': {\n      boxShadow: `none`,\n    },\n  };\n};\n\ndelete SternGrove.googleFonts;\n\nconst typography = new Typography(SternGrove);\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles();\n}\n\nexport default typography;\nexport const { rhythm } = typography;\nexport const { scale } = typography;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\nimport { rhythm, scale } from 'utils/typography';\n\nconst Contents = styled.main`\n  margin-bottom: 6em;\n\n  a {\n    transition: color 1s;\n  }\n\n  .gatsby-highlight {\n    margin: 2rem 0;\n  }\n\n  hr {\n    margin-top: 5rem;\n  }\n`;\n\nconst Footer = styled.footer`\n  text-align: center;\n  font-size: 0.75em;\n  opacity: 0.5;\n  transition: opacity 1s;\n\n  &:hover {\n    opacity: 1;\n  }\n\n  a {\n    transition: color 1s;\n  }\n`;\n\nconst Layout = ({ location, title, subTitle, children }) => {\n  // eslint-disable-next-line no-undef\n  const rootPath = `${__PATH_PREFIX__}/`;\n  let header;\n\n  if (location.pathname === rootPath) {\n    header = (\n      <>\n        <h1\n          style={{\n            ...scale(1.5),\n            marginTop: 0,\n            marginBottom: rhythm(0.25),\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to=\"/\"\n          >\n            {title}\n          </Link>\n        </h1>\n        <h3\n          style={{\n            marginBottom: rhythm(1.5),\n            marginTop: 0,\n          }}\n        >\n          {subTitle}\n        </h3>\n      </>\n    );\n  } else {\n    header = (\n      <>\n        <h3\n          style={{\n            fontFamily: `Montserrat, sans-serif`,\n            marginTop: 0,\n            marginBottom: rhythm(0.25),\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to=\"/\"\n          >\n            {title}\n          </Link>\n        </h3>\n        <h5\n          style={{\n            marginTop: 0,\n          }}\n        >\n          {subTitle}\n        </h5>\n      </>\n    );\n  }\n\n  return (\n    <div\n      style={{\n        marginLeft: `auto`,\n        marginRight: `auto`,\n        maxWidth: rhythm(24),\n        padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n      }}\n    >\n      <header>{header}</header>\n      <Contents>{children}</Contents>\n      <Footer>\n        © {new Date().getFullYear()}, Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.org\">Gatsby</a> &amp;{' '}\n        <a href=\"https://reactjs.org\">React</a>\n      </Footer>\n    </div>\n  );\n};\n\nexport default Layout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        siteUrl\n        author\n        image {\n          src\n          height\n          width\n          alt\n        }\n        facebook {\n          appId\n        }\n      }\n    }\n  }\n`;\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description;\n\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:url`,\n                content: data.site.siteMetadata.siteUrl,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                property: `og:image`,\n                content: data.site.siteMetadata.image.src,\n              },\n              {\n                property: `og:image:height`,\n                content: data.site.siteMetadata.image.height,\n              },\n              {\n                property: `og:image:width`,\n                content: data.site.siteMetadata.image.width,\n              },\n              {\n                property: `og:image:alt`,\n                content: data.site.siteMetadata.image.alt,\n              },\n              {\n                property: `fb:app_id`,\n                content: data.site.siteMetadata.facebook.appId,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : [],\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  description: '',\n  lang: `en`,\n  meta: [],\n  keywords: [],\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(\n    PropTypes.shape({ name: PropTypes.string, content: PropTypes.string }),\n  ),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n"],"sourceRoot":""}